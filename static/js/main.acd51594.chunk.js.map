{"version":3,"sources":["firebase.ts","contexts/AuthContext.tsx","components/Signup.tsx","components/Login.tsx","components/Dashboard.tsx","components/App.tsx","index.tsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","navigate","useNavigate","e","a","preventDefault","current","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Login","Dashboard","handleLogOut","onClick","App","Container","style","minHeight","maxWidth","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acd51594.chunk.js","sourcesContent":["import { getAuth } from \"firebase/auth\";\r\nimport { initializeApp } from \"@firebase/app\";\r\nimport \"dotenv/config\";\r\n\r\nconst app = initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = getAuth(app);\r\n\r\nexport default app;\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  User,\r\n} from \"firebase/auth\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext({});\r\n\r\nexport function useAuth() {\r\n  return useContext<any>(AuthContext);\r\n}\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const signup = (email: string, password: string) => {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const login = (email: string, password: string) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return signOut(auth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setLoading(false);\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import React, { FormEvent, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef<any>(null);\r\n  const passwordRef = useRef<any>(null);\r\n  const passwordConfirmRef = useRef<any>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const { signup } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      navigate(\"/dashboard\");\r\n    } catch (err: any) {\r\n      setError(\"Failed to signup\");\r\n    }\r\n    setLoading(false);\r\n    navigate(\"/user\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"w-100 text-center mt-2\">Sign Up</h2>\r\n          {error && (\r\n            <Alert className=\"h-25\" variant=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { FormEvent, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef<any>(null);\r\n  const passwordRef = useRef<any>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n    } catch (err: any) {\r\n      setError(\"Failed to sign in\");\r\n    }\r\n    setLoading(false);\r\n    navigate(\"/user\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"w-100 text-center mt-2\">Log In</h2>\r\n          {error && (\r\n            <Alert className=\"h-25\" variant=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                className=\"w-100 mb-2\"\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                className=\"w-100 mb-2\"\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogOut = async () => {\r\n    setError(\"\");\r\n\r\n    try {\r\n      await logout();\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <p>Email: {currentUser && currentUser.email}</p>\r\n      <Button onClick={handleLogOut}>Log Out</Button>\r\n      <p>{error}</p>\r\n    </div>\r\n  );\r\n}\r\n","// React\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { AuthProvider } from \"../contexts/AuthContext\";\r\n\r\n// Components\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\n// Bootstrap\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/signup\" element={<Signup />} />\r\n              <Route path=\"/user\" element={<Dashboard />} />\r\n            </Routes>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}