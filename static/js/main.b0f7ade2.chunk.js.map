{"version":3,"sources":["firebase.ts","contexts/AuthContext.tsx","components/Signup.tsx","components/Dashboard.tsx","components/App.tsx","index.tsx"],"names":["auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","Provider","Signup","usernameRef","useRef","emailRef","passwordRef","passwordConfirmRef","error","setError","e","a","preventDefault","current","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","navigate","useNavigate","handleLogOut","onClick","App","Container","style","minHeight","maxWidth","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0f7ade2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { initializeApp } from \"@firebase/app\";\r\n\r\nconst app = initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = getAuth();\r\n\r\nexport default app;\r\n","import { createUserWithEmailAndPassword, signOut, User } from \"firebase/auth\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst AuthContext = React.createContext({});\r\n\r\nexport function useAuth() {\r\n  return useContext<any>(AuthContext);\r\n}\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const signup = (email: string, password: string) => {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const login = (email: string, password: string) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return signOut(auth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setLoading(false);\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import React, { FormEvent, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Signup() {\r\n  const usernameRef = useRef<any>(null);\r\n  const emailRef = useRef<any>(null);\r\n  const passwordRef = useRef<any>(null);\r\n  const passwordConfirmRef = useRef<any>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const { signup } = useAuth();\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      await signup(\r\n        usernameRef.current.value,\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      );\r\n    } catch (err: any) {\r\n      setError(\"Failed to signup\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"w-100 text-center mt-2\">Sign Up</h2>\r\n          {error && (\r\n            <Alert className=\"h-25\" variant=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" ref={usernameRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState('');\r\n  const { currentUser, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogOut = async () => {\r\n    setError('');\r\n\r\n    try {\r\n      await logout();\r\n      navigate('/');\r\n    } catch (error) {\r\n      setError('Failed to log out');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <p>Email: {currentUser && currentUser.email}</p>\r\n      <Button onClick={handleLogOut}>Log Out</Button>\r\n      <p>{error}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Signup from \"../components/Signup\";\r\nimport { AuthProvider } from \"../contexts/AuthContext\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Signup />} />\r\n              <Route path=\"/user\" element={<Dashboard />} />\r\n            </Routes>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}