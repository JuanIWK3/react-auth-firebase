{"version":3,"sources":["firebase.ts","contexts/AuthContext.tsx","components/Signup.tsx","index.tsx"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","AuthContext","React","createContext","Signup","usernameRef","useRef","emailRef","passwordRef","passwordConfirmRef","useState","error","setError","loading","signup","useContext","e","a","preventDefault","current","value","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAIYA,YAAc,CACxBC,OAAQC,0CACRC,WAAYD,yCACZE,UAAWF,yBACXG,cAAeH,qCACfI,kBAAmBJ,eACnBK,MAAOL,8CAGWM,c,MCRdC,EAAcC,IAAMC,cAAc,ICAzB,SAASC,IACtB,IAAMC,EAAcC,iBAAY,MAC1BC,EAAWD,iBAAY,MACvBE,EAAcF,iBAAY,MAC1BG,EAAqBH,iBAAY,MAJR,EAKLI,mBAAS,IALJ,mBAKxBC,EALwB,KAKjBC,EALiB,OAMDF,oBAAkB,GANjB,mBAMxBG,EANwB,KAOvBC,GAPuB,KDGxBC,qBAAgBd,GCIfa,QAPuB,4CAS/B,WAA4BE,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBAEEV,EAAYW,QAAQC,QAAUX,EAAmBU,QAAQC,MAH/D,yCAIWR,EAAS,2BAJpB,uBAQIA,EAAS,IARb,SASUE,EACJT,EAAYc,QAAQC,MACpBb,EAASY,QAAQC,MACjBZ,EAAYW,QAAQC,OAZ1B,uDAeIR,EAAS,oBAfb,0DAT+B,sBA4B/B,OACE,qCACE,cAACS,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIC,UAAU,yBAAd,qBACCZ,GACC,cAACa,EAAA,EAAD,CAAOD,UAAU,OAAOE,QAAQ,SAAhC,SACGd,IAGL,eAACe,EAAA,EAAD,CAAMC,SAtCiB,4CAsCvB,UACE,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,IAAK5B,EAAa6B,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK1B,EAAU2B,UAAQ,OAEpD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKzB,EAAa0B,UAAQ,OAE1D,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKxB,EAAoByB,UAAQ,OAEjE,cAACC,EAAA,EAAD,CAAQC,SAAUvB,EAASU,UAAU,aAAaS,KAAK,SAAvD,6BAMN,sBAAKT,UAAU,yBAAf,sCAC2B,cAAC,IAAD,CAAMc,GAAG,SAAT,0BC7DjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpC,EAAD,MAEFqC,SAASC,eAAe,W","file":"static/js/main.85cbeca6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { initializeApp } from \"@firebase/app\";\r\n\r\nconst app = initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = getAuth();\r\n\r\nexport default app;\r\n","import { createUserWithEmailAndPassword, signOut, User } from \"firebase/auth\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst AuthContext = React.createContext({});\r\n\r\nexport function useAuth() {\r\n  return useContext<any>(AuthContext);\r\n}\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const signup = (email: string, password: string) => {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const login = (email: string, password: string) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return signOut(auth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setLoading(false);\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import React, { FormEvent, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Signup() {\r\n  const usernameRef = useRef<any>(null);\r\n  const emailRef = useRef<any>(null);\r\n  const passwordRef = useRef<any>(null);\r\n  const passwordConfirmRef = useRef<any>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const { signup } = useAuth();\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      await signup(\r\n        usernameRef.current.value,\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      );\r\n    } catch (err: any) {\r\n      setError(\"Failed to signup\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"w-100 text-center mt-2\">Sign Up</h2>\r\n          {error && (\r\n            <Alert className=\"h-25\" variant=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" ref={usernameRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./components/App\";\r\nimport Signup from \"./components/Signup\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Signup />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}